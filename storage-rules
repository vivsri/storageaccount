$VNetRGName = "az-ps-rg"
$VNetName = "az-ps-rg-vnet"
$IPAddressRange = @("10.1.0.0/16","10.2.0.0/16","10.3.0.0/16")
$subnets_101 = @(
[pscustomobject]  @{name='subnet1';range="10.1.0.0/24"}
[pscustomobject]  @{name='subnet2';range="10.1.1.0/24"}
[pscustomobject]  @{name='subnet3';range="10.1.2.0/24"}
[pscustomobject]  @{name='subnet4';range="10.1.3.0/24"}
[pscustomobject]  @{name='subnet5';range="10.1.4.0/24"}
)

$subnets_102 = @(
[pscustomobject]  @{name='subnet6';range="10.2.0.0/24"}
[pscustomobject]  @{name='subnet7';range="10.2.1.0/24"}
[pscustomobject]  @{name='subnet8';range="10.2.2.0/24"}
[pscustomobject]  @{name='subnet9';range="10.2.3.0/24"}
[pscustomobject]  @{name='subnet10';range="10.2.4.0/24"}
)

$saname = "mynetworkstorageaccount"
$kvname = "mynetworkkeyvault"
$SEP = "Microsoft.Storage", "Microsoft.KeyVault"
$nsg = (Get-AzNetworkSecurityGroup -ResourceGroupName $VNetRGName)

#Get VNet Object
$VNet = Get-AzVirtualNetwork -Name $VNetName -ResourceGroupName $VNetRGName

#Add IP address range to the vnet
foreach ($ip in $IPAddressRange) {
$VNet.AddressSpace.AddressPrefixes.Add($ip)
}

foreach ($subnet in $subnets_101) {
    Add-AzVirtualNetworkSubnetConfig -Name $subnet.name -VirtualNetwork $VNet -AddressPrefix $subnet.range -ServiceEndpoint $SEP -NetworkSecurityGroup $nsg
}

foreach ($subnet in $subnets_102) {
    Add-AzVirtualNetworkSubnetConfig -Name $subnet.name -VirtualNetwork $VNet -AddressPrefix $subnet.range -ServiceEndpoint $SEP -NetworkSecurityGroup $nsg
}

#Apply configuration stored in $Vnet
Set-AzVirtualNetwork -VirtualNetwork $VNet

$subnet_new = Get-AzVirtualNetwork -ResourceGroupName $VNetRGName -Name $VNetName | Get-AzVirtualNetworkSubnetConfig -Name subnet1
Add-AzStorageAccountNetworkRule -ResourceGroupName $VNetRGName -Name $saname -VirtualNetworkResourceId $subnet_new.Id
Add-AzKeyVaultNetworkRule -ResourceGroupName $VNetRGName -VaultName $kvname -VirtualNetworkResourceId $subnet_new.Id

# Clean up subnets and Additional Address spaces 
foreach ($subnet in $subnets_101) {
    Remove-AzVirtualNetworkSubnetConfig -Name $subnet.name -VirtualNetwork $VNet
}

foreach ($subnet in $subnets_102) {
    Remove-AzVirtualNetworkSubnetConfig -Name $subnet.name -VirtualNetwork $VNet
}
foreach ($ip in $IPAddressRange) {
$VNet.AddressSpace.AddressPrefixes.Remove($ip)
}
Set-AzVirtualNetwork -VirtualNetwork $VNet

